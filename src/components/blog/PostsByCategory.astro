---
import { Icon } from 'astro-icon/components';
import type { CollectionEntry } from 'astro:content';

interface Props {
  posts: CollectionEntry<'blog'>[];
  category: string;
}

const { posts, category } = Astro.props;

// Filter posts by category and sort by date
const categoryPosts = posts
  .filter((post) => post.data.category.toLowerCase() === category.toLowerCase())
  .sort((a, b) => b.data.pubDatetime.valueOf() - a.data.pubDatetime.valueOf());

// Format date function
const formatDate = (date: Date) => {
  return date.toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};
---

<div class="space-y-8">
  <h1 class="text-3xl font-bold mb-8">Artículos en la categoría: {category}</h1>

  {categoryPosts.length === 0 && <p class="text-gray-600">No posts found in this category.</p>}

  <ul class="space-y-4">
    {
      categoryPosts.map((post) => (
        <li class="group hover:bg-gray-50 rounded-lg transition-colors">
          <article class="p-4">
            <a href={`/blog/${post.id}/`} class="block">
              <h2 class="text-xl font-semibold group-hover:text-blue-600 transition-colors">{post.data.title}</h2>
            </a>
            <div class="flex flex-wrap gap-4 mt-3 text-sm text-gray-600">
              <div class="flex items-center">
                <Icon name="tabler:user" class="w-5 h-5 mr-1" />
                <span>{post.data.author}</span>
              </div>
              <div class="flex items-center">
                <Icon name="tabler:calendar" class="w-5 h-5 mr-1" />
                <span>{formatDate(post.data.pubDatetime)}</span>
              </div>
            </div>
            {post.data.description && <p class="mt-3 text-gray-700">{post.data.description}</p>}
          </article>
        </li>
      ))
    }
  </ul>
</div>
